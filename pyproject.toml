[tool.poetry]
name = "feast-rag-pipeline"
version = "1.0.0"
description = "A RAG pipeline using Feast feature store with Milvus vector database"
authors = ["RAG Team <team@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
# Core web framework
fastapi = ">=0.104.1"
pydantic = ">=2.5.0"
pydantic-settings = "*"
uvicorn = ">=0.24.0"
python-multipart = ">=0.0.6"

# RAG Pipeline core
ollama = ">=0.1.8"
pymilvus = ">=2.3.0"
numpy = ">=1.26.4"
pandas = "*"

# Document processing
PyPDF2 = ">=3.0.1"
python-docx = ">=0.8.11"

# ML dependencies
sentence-transformers = "*"
scikit-learn = ">=1.0.0"

# Feast feature store with Milvus support
feast = {extras = ["milvus"], version = ">=0.51.0"}
marshmallow = "<4.0.0"

# Environment and configuration
python-dotenv = ">=1.0.0"

[tool.poetry.group.test.dependencies]
pytest = ">=6.0.0"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-mock = "*"

[tool.poetry.group.lint.dependencies]
# Pre-commit and linting tools
pre-commit = "*"
black = "*"
flake8 = "*"
isort = "*"
mypy = "*"
bandit = "*"
pydocstyle = "*"

[tool.poetry.group.dev.dependencies]
# Development tools
ipython = "*"
jupyter = "*"
notebook = "*"

[tool.poetry.group.docs.dependencies]
# Documentation tools
mkdocs = "*"
mkdocs-material = "*"
mkdocstrings = {extras = ["python"], version = "*"}

[tool.poetry.group.deploy.dependencies]
# Deployment and monitoring
gunicorn = "*"
docker = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
]

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/venv/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
